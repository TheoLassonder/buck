PUBLIC_API_SOURCES = [
  'AbstractCacheResult.java',
  'ArtifactCache.java',
  'ArtifactCacheEvent.java',
  'ArtifactCacheEventFactory.java',
  'HttpArtifactCacheEvent.java',
  'DirArtifactCacheEvent.java',
  'ArtifactCacheConnectEvent.java',
  'CacheResultType.java',
  'NoopArtifactCache.java',
]
java_immutables_library(
  name = 'artifact_cache',
  srcs = PUBLIC_API_SOURCES,
  immutable_types = [
    'CacheResult',
  ],
  tests = [
    '//test/com/facebook/buck/artifact_cache:artifact_cache',
  ],
  autodeps = True,
  visibility = [
    'PUBLIC',
  ],
)

PROTOCOL_SOURCES = [
  'AbstractArtifactInfo.java',
  'AbstractHttpArtifactCacheArgs.java',
  'HttpArtifactCacheBinaryProtocol.java',
]
java_immutables_library(
  name = 'binary_protocol',
  srcs = PROTOCOL_SOURCES,
  immutable_types = [
    'ArtifactInfo',
    'HttpArtifactCacheArgs',
    'FetchResponseReadResult',
    'MetadataAndPayloadReadResultInternal',
    'StoreResponseReadResult',
    'StoreWriteResult',
  ],
  tests = [
    '//test/com/facebook/buck/artifact_cache:artifact_cache',
  ],
  autodeps = True,
  visibility = [
    '//src/com/facebook/buck/artifact_cache:generate_hybrid_payloads',
    '//src/com/facebook/buck/httpserver:cache_handler',
    '//test/com/facebook/buck/artifact_cache:artifact_cache',
  ],
)

CONFIG_SOURCES = [
  'ArtifactCacheBuckConfig.java',
  'ArtifactCaches.java',
]
java_immutables_library(
  name = 'config',
  srcs = [
    'ArtifactCacheBuckConfig.java',
    'ArtifactCaches.java',
  ],
  immutable_types = [
    'DirCacheEntry',
    'HttpCacheEntry',
  ],
  tests = [
    '//test/com/facebook/buck/artifact_cache:artifact_cache',
    '//test/com/facebook/buck/httpserver:httpserver_cache_integration_test',
  ],
  autodeps = True,
  visibility = [
    '//src/com/facebook/buck/cli:cli',
    '//src/com/facebook/buck/httpserver:cache_handler',
    '//test/com/facebook/buck/artifact_cache/...',
    '//test/com/facebook/buck/cli/...',
    '//test/com/facebook/buck/httpserver:httpserver_cache_integration_test',
  ]
)

GENERATOR_SOURCE = [
  'HybridPayloadGenerator.java'
]

java_library(
  name = 'impl',
  srcs = glob(['*.java'],
              excludes=PUBLIC_API_SOURCES + CONFIG_SOURCES + PROTOCOL_SOURCES + GENERATOR_SOURCE),
  tests = [
    '//test/com/facebook/buck/artifact_cache:artifact_cache',
  ],
  autodeps = True,
  visibility = [
    '//test/com/facebook/buck/artifact_cache/...',
  ],
)

java_binary(
  name = 'generate-hybrid-payloads',
  main_class = 'com.facebook.buck.artifact_cache.HybridPayloadGenerator',
  deps = [
    ':lib-generate-hybrid-payloads',
  ],
)

java_library(
  name = 'lib-generate-hybrid-payloads',
  srcs = GENERATOR_SOURCE,
  autodeps = True,
  visibility = [ 'PUBLIC' ],
)
